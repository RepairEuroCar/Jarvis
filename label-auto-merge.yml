name: üè∑Ô∏è –ê–≤—Ç–æ-–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏ auto-merge –∫ PR

on:
  pull_request:
    types: [opened, reopened, synchronize, edited, ready_for_review]

  workflow_dispatch:

jobs:
  label-pr:
    runs-on: ubuntu-latest

    steps:
      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏
        uses: actions/github-script@v6
        with:
          script: |
            const label = "auto-merge";
            const pr = context.payload.pull_request;

            // –ï—Å–ª–∏ –∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é, context.payload.pull_request –º–æ–∂–µ—Ç –±—ã—Ç—å undefined.
            if (!pr) {
              const prs = await github.paginate(
                github.rest.pulls.list,
                {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: "open",
                  per_page: 100,
                }
              );

              for (const prItem of prs) {
                const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prItem.number,
                });

                const hasLabel = currentLabels.some(l => l.name === label);

                if (!hasLabel) {
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: prItem.number,
                    labels: [label],
                  });
                  console.log(`–ú–µ—Ç–∫–∞ '${label}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ PR #${prItem.number}`);
                } else {
                  console.log(`PR #${prItem.number} —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–∫—É '${label}'`);
                }
              }
            } else {
              // –û–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫ –Ω–∞ —Å–æ–±—ã—Ç–∏–∏ PR
              const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
              });

              const hasLabel = currentLabels.some(l => l.name === label);

              if (!hasLabel) {
                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  labels: [label],
                });
                console.log(`–ú–µ—Ç–∫–∞ '${label}' –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ PR #${pr.number}`);
              } else {
                console.log(`PR #${pr.number} —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–∫—É '${label}'`);
              }
            }
