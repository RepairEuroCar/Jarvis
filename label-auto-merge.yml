name: üè∑Ô∏è –ê–≤—Ç–æ-–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏ auto-merge –∫ PR

on:
  pull_request:
    types: [opened, reopened, synchronize, edited, ready_for_review]
  workflow_dispatch:

jobs:
  label-pr:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∫–∏
        uses: actions/github-script@v6
        id: add-label
        with:
          script: |
            const label = "auto-merge";

            try {
              // –î–ª—è workflow_dispatch
              if (!context.payload.pull_request) {
                console.log('–†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö PR');
                const prs = await github.paginate(
                  github.rest.pulls.list,
                  {
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    state: "open",
                    per_page: 100,
                  }
                );

                for (const prItem of prs) {
                  await processPr(prItem.number);
                }
                return;
              }

              // –î–ª—è —Å–æ–±—ã—Ç–∏–π pull_request
              await processPr(context.payload.pull_request.number);

              async function processPr(prNumber) {
                const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                });

                if (currentLabels.some(l => l.name === label)) {
                  console.log(`PR #${prNumber} —É–∂–µ –∏–º–µ–µ—Ç –º–µ—Ç–∫—É '${label}'`);
                  return;
                }

                await github.rest.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  labels: [label],
                });
                console.log(`–î–æ–±–∞–≤–ª–µ–Ω–∞ –º–µ—Ç–∫–∞ '${label}' –∫ PR #${prNumber}`);
              }
            } catch (error) {
              core.setFailed(`–û—à–∏–±–∫–∞: ${error.message}`);
            }

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ BOM –≤ —Ñ–∞–π–ª–∞—Ö
        if: always()
        run: |
          set -eo pipefail
          echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ BOM..."
          found_files=$(grep -rl $'\xEF\xBB\xBF' . || true)

          if [ -n "$found_files" ]; then
            echo "–ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å BOM:"
            echo "$found_files"
            echo "::error::–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ñ–∞–π–ª—ã —Å BOM-–º–∞—Ä–∫–µ—Ä–æ–º!"
            exit 1
          else
            echo "–§–∞–π–ª—ã —Å BOM –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
          fi
