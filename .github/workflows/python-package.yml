
name: Python CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: ⬇️ Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: 💾 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort pytest coverage pytest-asyncio
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: 🔍 Code format and lint check
      run: |
        echo "🔎 Running black, isort, flake8 checks..."
        black . --check --diff || exit 1
        isort . --check-only || exit 1
        flake8 . || exit 1

    - name: 🧪 Run tests with coverage
      run: |
        echo "🧪 Running tests..."
        coverage run -m pytest
        coverage report --fail-under=80
        coverage xml

    - name: 📤 Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml
