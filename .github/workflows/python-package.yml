name: 🐍 Python CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v4

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort pytest coverage pytest-cov pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: 🧹 Format and Lint Check
        run: |
          black --check .
          isort --check-only .
          flake8 .

      - name: ✅ Run Tests with Coverage
        run: |
          pytest --cov=jarvis --cov-report=xml --cov-report=html tests/

      - name: ☁️ Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: 🗃️ Upload XML Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml

      - name: 🗃️ Upload HTML Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-${{ matrix.python-version }}
          path: htmlcov/

      - name: 💬 Comment Coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          FAIL_UNDER: '80'
        with:
          script: |
            const fs = require('fs');
            const xml = fs.readFileSync('coverage.xml', 'utf8');
            const match = xml.match(/line-rate="([0-9.]+)"/);
            if (!match) {
              core.setFailed('❌ Unable to parse coverage data');
              return;
            }
            const coverage = parseFloat(match[1]) * 100;
            const threshold = parseFloat(process.env.FAIL_UNDER);
            const diff = coverage - threshold;
            const body = `
### ✅ Coverage Report
**Coverage:** ${coverage.toFixed(2)}%
**Threshold:** ${threshold}%
**Diff:** ${diff.toFixed(2)}%
`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
