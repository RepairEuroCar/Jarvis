# üìÅ modules/voice_interface/config.py
"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
"""
import os
from dataclasses import dataclass, field
from typing import Any, Dict, List, Optional
import json


@dataclass
class VoiceConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
    model_path: str = os.path.expanduser("~/.vosk/models/vosk-model-small-ru-0.22")
    model_lang: str = "ru"
    samplerate: int = 16000
    blocksize: int = 4000
    device: Optional[int] = None
    timeout: float = 5.0
    max_queue_size: int = 100
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã wake word
    enable_wake_word: bool = True
    wake_words: List[str] = field(default_factory=lambda: ["–¥–∂–∞—Ä–≤–∏—Å", "jarvis", "—Å–ª—É—à–∞–π"])
    wake_word_threshold: float = 0.7
    
    # –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    stop_commands: List[str] = field(default_factory=lambda: ["—Å—Ç–æ–ø", "–≤—ã—Ö–æ–¥", "–º–æ–ª—á–∞—Ç—å"])
    
    # –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ñ—Ä–∞–∑—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    context_phrases: List[str] = field(default_factory=lambda: [
        "–∫–∞–∫–∞—è –ø–æ–≥–æ–¥–∞",
        "–≤–∫–ª—é—á–∏ —Å–≤–µ—Ç",
        "–≤—ã–∫–ª—é—á–∏ –º—É–∑—ã–∫—É",
        "–¥–æ–±–∞–≤—å –∑–∞–¥–∞—á—É",
        "–æ—Ç–∫—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
        "–Ω–∞–π–¥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ",
        "[unk]",
    ])
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ
    enable_noise_reduction: bool = True
    noise_threshold: float = 0.1
    enable_voice_activity_detection: bool = True
    vad_threshold: float = 0.5
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ª–∞–¥–∫–∞
    debug_mode: bool = False
    log_file: Optional[str] = None
    
    def save(self, file_path: str):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª"""
        with open(file_path, 'w') as f:
            json.dump(asdict(self), f, indent=2)
    
    @classmethod
    def load(cls, file_path: str) -> 'VoiceConfig':
        """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
        with open(file_path, 'r') as f:
            data = json.load(f)
            return cls(**data)